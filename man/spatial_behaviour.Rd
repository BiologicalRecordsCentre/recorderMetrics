% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_behaviour.R
\name{spatial_behaviour}
\alias{spatial_behaviour}
\title{Calculate spatial metrics}
\usage{
spatial_behaviour(recorder_name, data, y_col, x_col, crs, new_crs,
  recorder_col = "recorders", upper_percentile = 95,
  lower_percentile = 60, h = 5000, res = 1000, threshold = 5)
}
\arguments{
\item{recorder_name}{the name of the recorder for whom you want to calculate the metrics}

\item{data}{the data.frame of recording information}

\item{y_col}{the name of the column that contains the y coordinate (e.g. latitude) of the observation. This should be a numeric.}

\item{x_col}{the name of the column that contains the x coordinate (e.g. longitude)  of the observation. This should be a numeric.}

\item{crs}{the proj4 string that describes the projection your data are using. For GPS lat long this is "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs". You can find more at \url{http://spatialreference.org/}}

\item{new_crs}{the proj4 string that the decribes the coordinate system your data should be reproject to. THIS IS IMPORTANT. Your data must be on a projection that has units in meters so that results are comparable to other studies. An appropriate system in the UK is the UK national grid "+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs". If your orignal crs (given in the arguement \code{crs}), already has untis in meters then set \code{new_crs = NULL}. WARNING: if you set this to NULL but your coordinate system is not in units of meters you will likely have errors.}

\item{recorder_col}{the name of the column that contains the recorder names}

\item{upper_percentile}{The percentile used to create a polygon that encapsulates a proportion of the recorders observations using the kernel method (\code{?adehabitatHR::kernelUD}). This is used to estimate the area covered as will as the ratio of core to total area covered, see \code{Value}.}

\item{lower_percentile}{see \code{upper_percentile}}

\item{h}{a numeric smoothing parameter for drawing the kernels. See \code{?adehabitatHR::kernelUD} for details.}

\item{res}{a numeric giving the resolution for kernel estimation.}

\item{threshold}{If there are less than this number of observations NA values witll be returned for the metrics. Default is 5}
}
\value{
A data.frame with seven columns
\itemize{
 \item{\code{recorder} - }{The name of the recorder, as given in the recorder_name argument}
 \item{\code{spPoint} - }{The observation points as a SpatialPoints object}
 \item{\code{poly_upper} - }{A SpatialPolygonsDataFrame object giving the are containing the upper_percentile percentage of records using the kernel method}
 \item{\code{poly_lower} - }{A SpatialPolygonsDataFrame object giving the are containing the lower_percentile percentage of records using the kernel method}
 \item{\code{upper_n_poly} - }{The number of polygons that make up \code{poly_upper}}
 \item{\code{lower_n_poly} - }{The number of polygons that make up \code{poly_lower}}
 \item{\code{upper_area} - }{The area of the polygons that make up \code{poly_upper} in km squared}
 \item{\code{lower_area} - }{The area of the polygons that make up \code{poly_upper} in km squared}
 \item{\code{ratio} - }{The ratio of \code{lower_area} to \code{upper_area} calculated as \code{lower_area/upper_area}}
 \item{\code{n} - }{The total number of observations made by this recorder}
}
}
\description{
This function takes in data for a recorder and calculates the spatial metrics. Note that the spatial projection of the data allows for estimates of distance in meters. Pay particular attention to the specification or the parameters \code{crs} and \code{new_crs}
}
\examples{
\dontrun{

# load example data
head(cit_sci_data)

# Run for one recorder using the UK grid

## get the proj4 strings from http://spatialreference.org
# current form is lat long
WGS_84 <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# I want to change to UK national grid as that is in meters
UKNG <- "+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs"

SB <- spatial_behaviour(recorder_name = 3007,
                       data = cit_sci_data, 
                       crs = WGS_84,
                       new_crs = NULL,
                       y_col = 'lat',
                       x_col = 'long',
                       recorder_col = 'recorder')

SB
plot(SB$poly_upper)

# Run for more than one recorder, this can be slow 
SB_all <- lapply(unique(cit_sci_data$recorder)[1:10],
                FUN = spatial_behaviour, 
                data = cit_sci_data, 
                crs = WGS_84,
                new_crs = UKNG,
                y_col = 'lat',
                x_col = 'long',
                recorder_col = 'recorder')

# summarise as one table
SB_all_sum <- do.call(rbind, SB_all)

SB_all_sum
}

}
